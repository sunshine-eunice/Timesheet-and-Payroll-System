<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnClr.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        0yiuHvsSpH2ZEmrFyOgAAAAASUVORK5CYII=
</value>
  </data>
</root>